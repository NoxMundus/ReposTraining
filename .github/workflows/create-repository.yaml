name: Provision t3.micro EC2
on:
  workflow_dispatch:
    inputs:
      ec2-name:
        description: EC2 name
        required: true
        default: 'App Server'
        type: string
jobs:
  provision-ec2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
          node-version: '14'

      - uses: aws-actions/configure-aws-credentials@v1
        name: Configure AWS credentials
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY}}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_KEY}}'
          aws-region: us-east-1

      - uses: hashicorp/setup-terraform@v2
        name: Setup Terraform
        with:
          terraform_wrapper: false

      - name: Terraform Apply
        id:   apply
        env:
          TF_VAR_ec2_name:  "${{ github.event.inputs.ec2-name }}"
        run: |
          cd terraform/
          terraform init
          terraform validate
          terraform plan 
          terraform apply -auto-approve



on:
  workflow_dispatch:
    push:

name: "Projeto

jobs:
  create-repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        name: Setup Terraform

      - name: "Terraform Init"
        run: terraform init
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY}}

      - name: "Terraform Apply"
        run: terraform apply -auto-approve
        if: github.event_name == 'workflow_dispatch'
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY}}

